<%!
    public static class SupportMemberBridge extends BridgeBase {
        private static final Class CLASS = SupportMemberBridge.class;
        private static final String MODEL_NAME = "Fulfillment Group Members";
        public SupportMemberBridge() {}

        public static BridgeCount membershipCount(HelperContext context, String templateId, String groupId, String loginId) {
            // Define the bridge qualification that this method will use.
            String qualification = "By Group ID and Login ID";
            // Build the map of parameters for the qualification above.
            Map<String, String> parameters = new java.util.HashMap<String, String>();
            parameters.put("Group ID", groupId);
            parameters.put("Login ID", loginId);
            // Make the bridge call.
            return BridgeBase.count(context, templateId, "Fulfillment Group Members", qualification, parameters);
        }

        public static BridgeList<SupportMemberBridge> findMembersById(HelperContext context, String templateId, String loginId) {
            String qualification = "By Login ID";
            Map<String, String> parameters = new java.util.HashMap<String, String>();
            parameters.put("Login ID", loginId);
            Map<String, String> metadata = new java.util.HashMap<String, String>();
            /**
             * This metadata sets a sort on id
             * Sorting is required on at least one attribute other than description with over 255 characters or things will break
             * The bridge syntax has to be delimited as a string otherwise it will be interpreted as java code
             */
            metadata.put("order", "<"+"%=attribute[\"Login ID\"]%"+">:ASC");
            return BridgeBase.search(context, templateId, MODEL_NAME, qualification, parameters, metadata, CLASS);
        }

        public static BridgeList findByGroupId(HelperContext context, String templateId, String groupId) {
            String qualification = "By Group ID";
            Map<String, String> parameters = new java.util.HashMap<String, String>();
            parameters.put("Group ID",groupId);

            return BridgeBase.search(context, templateId, MODEL_NAME, qualification, parameters, CLASS);
        }
        
        /*
         * SupportMemberBridge extends Bridge base so get is avaliable
        */
        public String getGroupName() { return get("Group Name"); }
        public String getGroupId() {return get("Group ID");}
        public String getFirstName() {return get("First Name");}
        public String getLastName() { return get("Last Name"); }
        public String getFullName() { return get("First Name") + " " + get("Last Name"); }
        public String getEmail() { return get("Email"); }
        public String getLoginID() { return get("Login ID"); }
        
    }
%>  