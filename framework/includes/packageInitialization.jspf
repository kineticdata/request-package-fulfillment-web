<%--
    This file is responsible for initializing the package framework.  It loads
    the core bundleInitialization.jspf file (which is responsible for
    initializing the bundle framework), loads the core noCache.jspf file (which
    ensures that all of the package pages are not cached by the client or a
    proxy, loads the package configuration file, and loads any present helpers
    or models.

    This file will need to be modified if there are any helper or model classes
    that are added to the package.  Samples are included below.
--%>

<%-- 
    Initialize the bundle and load any necessary dependencies.
--%>
<%@include file="../../../../core/framework/includes/bundleInitialization.jspf"%>

<%-- 
    Ensure the response is not cached by client or proxy.
--%>
<%@include file="../../../../core/framework/includes/noCache.jspf"%>

<%-- 
    Include any helper files.  By convention, package specific logic (such as
    the building of URLs) should be included in a PackageHelper helper class.

    Format:
      <%@include file="../helpers/HELPER.jspf
    Example:
      <%@include file="../helpers/LanguageHelper.jspf
      <%@include file="../helpers/PackageHelper.jspf
--%>
<%@include file="../helpers/PackageHelper.jspf" %>
<%@include file="../../../../common/framework/helpers/PathHelper.jspf" %>

<%--
    Include any model files.

    Format:
      <%@include file="../models/SYSTEM/MODEL.jspf
    Example:
      <%@include file="../models/kineticSample/Change.jspf
      <%@include file="../models/kineticSample/Incident.jspf
      <%@include file="../models/kineticSample/Person.jspf
--%>

<%--
    Instantiate any appropriate helper objects.  By convention, the
    PackageHelper class will typically be instantiated here.  The PackageHelper
    requires the current bundle object to be passed as a parameter (so that the
    package URL paths can be made relative to the current bundle/package without
    hard coding in the name of the bundle or package).
--%>
<% PackageHelper packageHelper = new PackageHelper(bundle); %>
<% PathHelper pathHelper = new PathHelper(bundle); %>

<%--
    Include the package configuration file.
--%>
<%@include file="../../config/config.jspf" %>

<%-- Include the package language initialization file. --%>
<%@include file="languageInitialization.jspf" %>
<%--
    Import the classes that will be used for fulfillment API
--%>

<%@page import="org.json.simple.JSONObject" %>
<%@page import="org.json.simple.JSONValue" %>
<%@page import="org.json.simple.JSONArray" %>
<%@page import="org.apache.commons.io.IOUtils" %>
<%@page import="java.net.URLDecoder" %>
<%@page import="java.util.Map" %>
<%@page import="java.util.LinkedHashMap" %>
<%@page import="java.util.ArrayList" %>
<%@page import="java.util.regex.Matcher" %>
<%@page import="java.util.regex.Pattern" %>
<%@page import="java.text.SimpleDateFormat" %>
<%@page import="com.kineticdata.core.v1.utils.JsonUtils"%>
<%@page import="org.apache.commons.fileupload.FileItem"%>
<%@page import="org.apache.commons.fileupload.servlet.ServletFileUpload"%>
<%@page import="org.apache.commons.fileupload.disk.DiskFileItemFactory"%>
<%@page import="org.apache.commons.fileupload.FileUploadException"%>
<%@page import="org.apache.commons.io.FilenameUtils"%>

<%--
    Import the models that will be used for fulfillment API
--%>

<%@include file="../models/DateConverter.jspf" %>
<%@include file="../models/WorkOrder.jspf"%>
<%@include file="../models/WorkOrderLog.jspf"%>
<%@include file="../models/WorkInformation.jspf"%>
<%@include file="../models/WorkOrderFilter.jspf"%>
<%@include file="../models/Group.jspf" %>
<%@include file="../models/Member.jspf" %>
<%@include file="../models/Assignment.jspf" %>

